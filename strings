#include <iostream>
#include <sstream>
class MyString
{
public:
	MyString()
	{
		m_str = nullptr;
	}
	~MyString()
	{
		if(m_str != nullptr)
		{
			delete[] m_str;
			m_str = nullptr;
		}
	}
	/********************************************/
	void Copy(const char * str)
	{
	    if(m_str != nullptr)
		{
			delete[] m_str;
			m_str = nullptr;
		}
		m_str = new char[strlen(str) + 1];
		strcpy(m_str, str);
		std::cout << m_str << std::endl;
	}
	/********************************************/
	bool Equals(const char * str, const char * str2) const
	{  
	    if (strcmp(str, str2) == 0)
	    {
	    	return true;
	    }
	    else
	    {
	    	return false;
	    }
	}
	/********************************************/
	int Length(const char * str)
	{
			int count = 0;
			const char *pStr = str;
	
	      while (*pStr != 0)
      	{
	      	pStr++;
	      	count++;
	      }
	      return count;
	}
	/********************************************/
	char Index(const char * str, int index)
	{
		char letter = str[index];
		
		return letter;
	}
private:
	char * m_str;
	void DeleteStr()
	{
		delete[] m_str;
		m_str = nullptr;
	}
};
int main()
{
     MyString str;
     
     MyString str2;
     
     
    int length = 0;
    int index = 6;
    char letter = ' ';
    
    if (str.Equals("yes","yes"))
    {   
       str.Copy("hello world"); 
       length = str.Length("hello world");
       std::cout << length << std::endl;
       letter = str.Index("hello world", index);
      std::cout << letter << std::endl;
    }
    
}